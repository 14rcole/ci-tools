kind: Template
apiVersion: template.openshift.io/v1

parameters:
- name: JOB_NAME_SAFE
  required: true
- name: JOB_NAME_HASH
  required: true
- name: NAMESPACE
  required: true
- name: IMAGE_FORMAT
  required: true
- name: IMAGE_INSTALLER
  required: true
- name: LOCAL_IMAGE_SRC
  required: true
- name: IMAGE_CLI
  required: true
- name: IMAGE_TESTS
  required: true
- name: CLUSTER_TYPE
  required: true
- name: TEST_COMMAND
  required: true
- name: RELEASE_IMAGE_LATEST
  required: true
- name: BUILD_ID
  required: false

objects:
- kind: RoleBinding
  apiVersion: authorization.openshift.io/v1
  metadata:
    name: ${JOB_NAME_SAFE}-image-puller
    namespace: ${NAMESPACE}
  roleRef:
    name: system:image-puller
  subjects:
  - kind: SystemGroup
    name: system:unauthenticated
  - kind: SystemGroup
    name: system:authenticated
- kind: Pod
  apiVersion: v1
  metadata:
    name: ${JOB_NAME_SAFE}
    namespace: ${NAMESPACE}
    annotations:
      ci-operator.openshift.io/wait-for-container-artifacts: teardown
      ci-operator.openshift.io/save-container-logs: "true"
      ci-operator.openshift.io/container-sub-tests: "setup,test,teardown"
  spec:
    restartPolicy: Never
    activeDeadlineSeconds: 14400
    terminationGracePeriodSeconds: 900
    volumes:
    - name: artifacts
      emptyDir: {}
    - name: shared-tmp
      emptyDir: {}
    - name: cluster-profile
      secret:
        secretName: cluster-profile
    initContainers:
    - name: cli
      image: ${IMAGE_CLI}
      volumeMounts:
      - name: shared-tmp
        mountPath: /tmp/shared
      command:
      - cp
      - /usr/bin/oc
      - /tmp/shared/oc

    containers:
    - name: test
      image: ${LOCAL_IMAGE_SRC}
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - name: shared-tmp
        mountPath: /tmp/shared
      - name: cluster-profile
        mountPath: /tmp/profile
      - name: artifacts
        mountPath: /tmp/artifacts
      env:
      - name: IMAGE_FORMAT
        value: ${IMAGE_FORMAT}
      - name: RELEASE_IMAGE_LATEST
        value: ${RELEASE_IMAGE_LATEST}
      - name: CLUSTER_TYPE
        value: ${CLUSTER_TYPE}
      - name: TEST_COMMAND
        value: ${TEST_COMMAND}
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        if [[ -z $IMAGE_FORMAT ]]; then
          echo "ERROR: IMAGE_FORMAT unset!"
          exit 1
        fi
        if [[ -z $RELEASE_IMAGE_LATEST ]]; then
          echo "ERROR: RELEASE_IMAGE_LATEST unset!"
          exit 1
        fi
        if [[ -z $CLUSTER_TYPE ]]; then
          echo "ERROR: CLUSTER_TYPE unset!"
          exit 1
        fi
        if [[ -z $TEST_COMMAND ]]; then
          echo "ERROR: TEST_COMMAND unset!"
          exit 1
        fi
        if ! test -f CI_OPERATOR.md; then
          echo "ERROR: CI_OPERATOR.md not found, expected to exist from the container image."
          exit 1
        fi
        if ! test -f /tmp/profile/data; then
          echo "ERROR: /tmp/profile/data not found, expected to exist from the cluster profile mount."
          exit 1
        fi
        if ! test -f /tmp/shared/oc; then
          echo "ERROR: /tmp/shared/oc not found, expected to exist from the init-container."
          exit 1
        fi
        echo "test" # to create a log
        echo "test" > /tmp/artifacts/test # to output an artifact

    # Runs an install
    - name: setup
      image: ${IMAGE_INSTALLER}
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - name: shared-tmp
        mountPath: /tmp/shared
      - name: cluster-profile
        mountPath: /tmp/profile
      - name: artifacts
        mountPath: /tmp/artifacts
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        if ! command -v openshift-install; then
          echo "ERROR: openshift-install not found, expected to exist from the container image."
          exit 1
        fi
        if ! test -f /tmp/profile/data; then
          echo "ERROR: /tmp/profile/data not found, expected to exist from the cluster profile mount."
          exit 1
        fi
        if ! test -f /tmp/shared/oc; then
          echo "ERROR: /tmp/shared/oc not found, expected to exist from the init-container."
          exit 1
        fi
        echo "setup" # to create a log
        echo "setup" > /tmp/artifacts/setup # to output an artifact

    # Performs cleanup of all created resources
    - name: teardown
      image: ${IMAGE_TESTS}
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - name: shared-tmp
        mountPath: /tmp/shared
      - name: cluster-profile
        mountPath: /tmp/profile
      - name: artifacts
        mountPath: /tmp/artifacts
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        if ! command -v openshift-tests; then
          echo "ERROR: openshift-tests not found, expected to exist from the container image."
          exit 1
        fi
        if ! test -f /tmp/profile/data; then
          echo "ERROR: /tmp/profile/data not found, expected to exist from the cluster profile mount."
          exit 1
        fi
        if ! test -f /tmp/shared/oc; then
          echo "ERROR: /tmp/shared/oc not found, expected to exist from the init-container."
          exit 1
        fi
        echo "teardown" # to create a log
        echo "teardown" > /tmp/artifacts/teardown # to output an artifact
